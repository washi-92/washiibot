import discord
from discord import role 
from discord.ext import commands
import random

from discord.ext.commands.core import check
client = discord.Client()

bot = commands.Bot(command_prefix = "=", description = "miam")

@bot.event
async def on_ready():
    print("commandes op√©rationnellese !")
#test
@bot.command()
async def test(ctx):
    await ctx.send("miam miam !")
#infoserveur
@bot.command()
async def serverInfo(ctx):
    server = ctx.guild
    TextSalon = len(server.text_channels)
    TextVoc = len(server.voice_channels)
    DescServeur = server.description
    nmbrP = server.member_count
    NomsServeur = server.name
    message = f"Le serveur **{NomsServeur}** contient {nmbrP} personnes. \nCe serveur poss√®de {TextSalon} salons √©crit ainsi que {TextVoc} vocaux. "
    await ctx.send(message)
#clear
@bot.command()
@commands.has_permissions(manage_messages = True)
async def clear(ctx, nombre: int):
    messages = await ctx.channel.history(limit = nombre + 1).flatten()
    for message in messages:
        await message.delete()
#100 fois
@bot.command()
async def test10(ctx):
    for loop in range(100):
        message = "test 100 fois"
        await ctx.send(message)
#navigation
@bot.command()
async def nav1(message):
    roleile2 = discord.utils.get(message.guild.roles, name = "ile2")
    await message.author.add_roles(roleile2)
    await message.channel.send('Tu es maintenant sur la deuxi√®me ile')
#fouiller
@bot.command()
async def chercher(ctx):
    if random.randint(1,100) < 50:
        embed = discord.Embed(title = " ",
                            description = "üì¶ ‚ñ™Ô∏è Vous avez trouv√© 5 vivres !")
        embed.set_author(name = ctx.author.name, 
                        icon_url = ctx.author.avatar_url)
        await ctx.send(embed = embed)
    if random.randint(1,100) > 50:
        embed = discord.Embed(title = " ",
                            description = "üì¶ ‚ñ™Ô∏è Vous avez trouv√© 5 mat√©riaux !")
        embed.set_author(name = ctx.author.name, 
                        icon_url = ctx.author.avatar_url)
        await ctx.send(embed = embed)

@bot.command()
async def salons(ctx):
    embed = discord.Embed(title = "**R√©sum√© des diff√©rents salons :**",
                          description = " ")
    embed.add_field(name="**Salons textuels :**", value="<#901918991415644232> : Salon o√π sont indiqu√©es les arriv√©es et les d√©parts des membres du discord. \n<#901935609898229793> : Salon o√π ceux qui le veulent peuvent se pr√©senter. \n<#695528614237569057> : Salon principal pour discuter de tout et n'importe quoi. \n<#902564524513701888> : Salon r√©sumant les diff√©rents salons du discord.", inline=False)
    embed.add_field(name = "**Interfeel :**", value = "<#695528898187886672> : Salon pour parler d'Interfeel sans spoiler.\n<#901917995662733353> : Salon d√©di√© au tome 1 d'Interfeel.\n<#901917830134497411> : Salon d√©di√© au tome 2 d'Interfeel.\n<#901917857011597322> : Salon d√©di√© au tome 3 d'Interfeel.\n<#902204919333941248> : Salon o√π Antonin Atger communique ses derni√®res infos importantes.", inline=False)
    embed.add_field(name = "Conseils d'√©criture :", value = "<#866386910997250078> Salon g√©n√©ral des conseils d'√©criture.\n<#901962902033022986> : Salon des conseils d'√©criture d√©di√© aux personnages.\n<#901962918659256340> : Salon des conseils d'√©criture d√©di√© aux univers.\n<#901962932823416892> : Salon des conseils d'√©criture d√©di√© aux intrigues.\n<#901974460679200778> : Salon des conseils d'√©criture d√©di√© aux casse-t√™tes de notre sublime langue.\n<#902123460724154408> : Salon des conseils d'√©criture o√π la communaut√© peux poster des extraits de sa litt√©rature.\n<#902183526294757476> : Salon des conseils d'√©criture o√π les gens peuvent venir se motiver.\n<#902310509599133696> : Salon des conseils d'√©criture d√©di√© aux musiques.\n<#902833017960157195> : Salon o√π Antonin Atger propose √† la communaut√© diff√©rents d√©fis litt√©raires.\n<#902946738300649522> : Salon o√π vous pouvez demander de l'aide dans le cadre du concours Nano WriMo.", inline=False)
    embed.add_field(name = "Mises en relation :", value = "<#901935221635702865> : Salon o√π vous pouvez pr√©senter ce que vous avez cr√©√©, quel que soit le m√©di√© et/ou support.\n<#901174475750531172> : Salon o√π vous pouvez pr√©senter vos comp√©tences.\n<#866387013770674176> : Salon o√π vous pouvez demander √† la communaut√© de b√™ta lire votre futur Harry Potter √† l'√©cole des Sorciers")
    embed.add_field(name = "Analyse d'oeuvres :", value= "<#901174240689139803> : Salon des analyses d'≈ìuvres d√©di√© aux mangas, livres et films.\n<#902235535043600444> : Salon des analyses d'≈ìuvres d√©di√© aux mangas.\n<#902235128481316935> : Salon des analyses d'≈ìuvres d√©di√© aux livres.\n<#902235309264212029> : Salon des analyses d'≈ìuvres d√©di√© aux s√©ries.\n<#901933018300690523> : Vous voulez savoir ce que contient ce salon ? Tr√®s bien, ce savoir est √† vous. Trouvez-le ! Il est indiqu√© quelque part dans le nom de ce salon !\n<#901956690876985435> : Vous pensiez trouver une description du salon, mais c'√©tait moi, Dio !", inline=False)
    embed.add_field(name = "Salons vocaux :", value = "<#695528614237569058> : Vocal g√©n√©ral\n<#901919988158455818> : Nos meilleurs d√©bats One Piece seront l√† bas :eyes:", inline=False)
    embed.add_field(name = "Gestion du serveur :", value = "<#901939611775938591> : Salon recensant les r√®gles du discord.\n<#901954883702382674> : Salon d√©di√© au spam des commandes des bots.\n<#901922463225622558> : Salon o√π vous pouvez faire vos suggestions pour am√©liorer ce discord.", inline=False)
    embed.set_thumbnail(url="https://ladiescolocblog.files.wordpress.com/2020/01/interfeel-tome-2-les-resistants-1271053.png?w=606&h=312&crop=1")
    
@bot.command()
async def inscription(ctx):
	await ctx.send("Quel est le nom de priate, marine ou r√©volutionaire de votre personnage ?")

	def checkMessage(message):
		return message.author == ctx.message.author and ctx.message.channel == message.channel

	try:
		nom = await bot.wait_for("message", timeout = 10, check = checkMessage)
	except:
		await ctx.send("Veuillez r√©it√©rer la commande, 10 secondes se sont √©coul√©es.")
		return
	message = await ctx.send(f"Nom : {nom.content}\n Quel est l'√©pith√®te de votre personnage ? (Avec \"le\" \"la\" ou \"l\'\") ")

    def checkMessage(message):
                return message.author == ctx.message.author and ctx.message.channel == message.channel

        try:
            epith = await bot.wait_for("message", timeout = 10, check = checkMessage)
        except:
            await ctx.send("Veuillez r√©it√©rer la commande, 10 secondes se sont √©coul√©es.")
            return

    await ctx.send(f"Nom : {nom.content}\nEpith√®te : {epith.content}")




bot.run("process.env.TOKEN" )
